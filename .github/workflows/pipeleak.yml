name: Wait for All Jobs in Commit

on:
  workflow_dispatch:
  push:

jobs:
  dummy:
    runs-on: ubuntu-latest
    steps:
      - name: Start dummy job
        run: |
          echo "üß™ Dummy job started. Simulating some work..."
          sleep 90
          echo "‚úÖ Dummy job finished."

  wait-for-siblings:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Wait until all sibling jobs finish
        id: wait
        env:
          GH_TOKEN: ${{ github.token }}
          SHA: ${{ github.sha }}
          REPO: ${{ github.repository }}
          CURRENT_RUN_ID: ${{ github.run_id }}
          CURRENT_JOB_ID: ${{ github.job }}
        run: |
          echo "üîé Looking for all jobs for commit $SHA"
          echo "‚ö†Ô∏è Will exclude current job ($CURRENT_JOB_ID) from waiting, but include in final output."
          echo ""

          while true; do
            # Get all jobs for this commit (all runs), excluding current job
            sibling_jobs=$(gh api repos/$REPO/actions/runs \
              --paginate \
              --jq ".workflow_runs[]
                | select(.head_sha==\"$SHA\")
                | .id" \
              | xargs -I {} gh api repos/$REPO/actions/runs/{}/jobs \
                  --jq '.jobs[] | select(.name != "'"$CURRENT_JOB_ID"'") | {id: .id, name: .name, status: .status, conclusion: .conclusion, url: .html_url}' \
              | jq -s .)

            if [ -z "$sibling_jobs" ] || [ "$sibling_jobs" = "[]" ]; then
              echo "‚ÑπÔ∏è No sibling jobs found."
              break
            fi

            # Show sibling job status
            echo "üìã Current sibling jobs:"
            echo "$sibling_jobs" | jq -r '"- \(.name) [\(.id)] status=\(.status) conclusion=\(.conclusion) url=\(.url)"'

            # Check for unfinished jobs
            unfinished=$(echo "$sibling_jobs" | jq -r 'select(.status != "completed") | .id')
            if [ -z "$unfinished" ]; then
              echo ""
              echo "‚úÖ All sibling jobs are finished (success, failure, or cancelled)."
              break
            fi

            echo ""
            echo "‚è≥ Waiting for ${#unfinished[@]} job(s)... sleeping 30s"
            echo ""
            sleep 30
          done

          # Get current job info
          current_job_info=$(gh api repos/$REPO/actions/runs/$CURRENT_RUN_ID/jobs \
            --jq '.jobs[] | {id: .id, name: .name, status: .status, conclusion: .conclusion, url: .html_url}' | jq -s .)

          # Merge sibling jobs + current job
          all_jobs=$(jq -s '.[0] + .[1]' <(echo "$sibling_jobs") <(echo "$current_job_info"))

          echo "üéØ Final job info (siblings + current job):"
          echo "$all_jobs" | jq .

          # Expose output
          echo "job_info=$(echo "$all_jobs" | jq -c .)" >> $GITHUB_OUTPUT

      - name: Run custom command
        run: |
          echo "üöÄ All jobs for this commit finished."
          echo '${{ steps.wait.outputs.job_info }}' | jq .